{"version":3,"sources":["components/pages/SinglePage.js","utils/setContent.js","components/errorMessage/ErrorMessage.gif","components/errorMessage/ErrorMessage.js","components/skeleton/Skeleton.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["getContent","setContent","SinglePage","Component","dataType","useSelector","state","comic","comicData","comicLoadingStatus","comicId","char","singleCharData","singleCharLoadingStatus","singlecharId","useState","data","setData","status","setStatus","useLayoutEffect","updateData","onDataLoaded","type","Error","newItemsLoading","ErrorMessage","src","img","alt","style","objectFit","display","width","height","margin","Skeleton","className","AppBanner","avengers","avengersLogo"],"mappings":"2JAKMA,EAAaC,YAAW,UAsCfC,UApCI,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SACxB,EAAiDC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAArEC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,mBAAoBC,EAAtC,EAAsCA,QACtC,EAAgEL,aAAY,SAAAC,GAAK,OAAIA,EAAMK,QAApFC,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,wBAAyBC,EAAhD,EAAgDA,aAEhD,EAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,QAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEAC,2BAAgB,WACZC,MACD,CAACX,EAASI,IAEb,IAAMO,EAAa,WACf,OAAQjB,GACJ,IAAK,QACDkB,EAAad,GACbW,EAAUV,GACV,MACJ,IAAK,YACDa,EAAaV,GACbO,EAAUN,KAKhBS,EAAe,SAACN,GAClBC,EAAQD,IAGZ,OACI,qCACI,cAAC,IAAD,IACChB,EAAWkB,EAAQf,EAAWa,Q,gCCtC/C,mCA0Eef,IAtEE,SAACsB,GAEd,OAAOA,GACH,IAAK,SACD,OACI,SAACL,EAAQf,EAAWa,GAChB,OAAOE,GACH,IAAK,OACD,OAASF,EAER,cAACb,EAAD,CAAWa,KAAMA,IADjB,cAAC,IAAD,IAIL,IAAK,UACD,OAAO,cAAC,IAAD,IAEX,IAAK,QACD,OAAO,cAAC,IAAD,IACX,QACI,MAAM,IAAIQ,MAAM,8BAMpC,IAAK,OACD,OACI,SAACN,EAAQf,EAAWsB,GAChB,OAAOP,GACH,IAAK,UACD,OAAOO,EAAiB,cAACtB,EAAD,IAAa,cAAC,IAAD,IACzC,IAAK,YACD,OAAO,cAACA,EAAD,IACX,IAAK,QACD,OAAO,cAAC,IAAD,IACX,QACI,MAAM,IAAIqB,MAAM,8BAKhC,IAAK,OACD,OACI,SAACN,EAAQf,EAAWa,GAChB,OAAOE,GACH,IAAK,OACD,OAASF,EAER,cAACb,EAAD,CAAWa,KAAMA,IADjB,cAAC,IAAD,IAIL,IAAK,UACD,OAAO,cAAC,IAAD,IAEX,IAAK,QACD,OAAO,cAAC,IAAD,IACX,QACI,MAAM,IAAIQ,MAAM,8BAMpC,QACI,MAAM,IAAIA,MAAM,+B,gCCpEjB,UAA0B,yC,OCQ1BE,IANI,WACf,OACI,qBAAKC,IAAKC,EAAMC,IAAI,QAAQC,MAAO,CAACC,UAAU,UAAUC,QAAQ,QAASC,MAAM,QAAQC,OAAO,QAASC,OAAO,c,gCCJtH,iBAmBeC,IAjBE,WACb,OACI,qCACI,mBAAGC,UAAU,eAAb,oTACA,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,kC,oFCbhB,MAA0B,qCCA1B,MAA0B,0C,OCiB1BC,IAbG,WACd,OACI,sBAAKD,UAAU,cAAf,UACI,qBAAKV,IAAKY,EAAUV,IAAI,aACxB,sBAAKQ,UAAU,mBAAf,iKACgC,uBADhC,uIAIA,qBAAKV,IAAKa,EAAcX,IAAI","file":"static/js/7.7053e456.chunk.js","sourcesContent":["import { useState, useLayoutEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport setContent from '../../utils/setContent';\r\n\r\nconst getContent = setContent('single');\r\n\r\nconst SinglePage = ({Component, dataType}) => {\r\n        const {comicData, comicLoadingStatus, comicId} = useSelector(state => state.comic);\r\n        const {singleCharData, singleCharLoadingStatus, singlecharId} = useSelector(state => state.char);\r\n\r\n        const [data, setData] = useState(null);\r\n        const [status, setStatus] = useState('idle');\r\n\r\n        useLayoutEffect(() => {\r\n            updateData()\r\n        }, [comicId, singlecharId])\r\n\r\n        const updateData = () => {\r\n            switch (dataType) {\r\n                case 'comic':\r\n                    onDataLoaded(comicData);\r\n                    setStatus(comicLoadingStatus);\r\n                    break;\r\n                case 'character':\r\n                    onDataLoaded(singleCharData);\r\n                    setStatus(singleCharLoadingStatus);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        const onDataLoaded = (data) => {\r\n            setData(data);\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <AppBanner/>\r\n                {getContent(status, Component, data)}\r\n            </>\r\n        )\r\n}\r\n\r\nexport default SinglePage;","import Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton.js';\r\n\r\nconst setContent=(type)=>{\r\n\r\n    switch(type){\r\n        case 'single':\r\n            return(\r\n                (status, Component, data) => {\r\n                    switch(status){\r\n                        case 'idle':{\r\n                            return (!data\r\n                            ?<Skeleton/>\r\n                            :<Component data={data}/>)\r\n                        }\r\n                            break;\r\n                        case 'loading':\r\n                            return <Spinner/>\r\n                            break;\r\n                        case 'error':\r\n                            return <ErrorMessage/>\r\n                        default:\r\n                            throw new Error('Unexpected process state');\r\n                    }\r\n                }\r\n                \r\n            );\r\n            \r\n        case 'list':\r\n            return(\r\n                (status, Component, newItemsLoading) => {\r\n                    switch(status){\r\n                        case 'loading': \r\n                            return newItemsLoading? <Component/>:<Spinner/>;\r\n                        case 'confirmed':\r\n                            return <Component/>\r\n                        case 'error':\r\n                            return <ErrorMessage/>\r\n                        default:\r\n                            throw new Error('Unexpected process state');\r\n                    }\r\n                }\r\n            );\r\n            \r\n            case 'page':\r\n                return(\r\n                    (status, Component, data) => {\r\n                        switch(status){\r\n                            case 'idle':{\r\n                                return (!data\r\n                                ?<Skeleton/>\r\n                                :<Component data={data}/>)\r\n                            }\r\n                                break;\r\n                            case 'loading':\r\n                                return <Spinner/>\r\n                                break;\r\n                            case 'error':\r\n                                return <ErrorMessage/>\r\n                            default:\r\n                                throw new Error('Unexpected process state');\r\n                        }\r\n                    }\r\n                    \r\n                );\r\n                \r\n            default:\r\n                throw new Error('Unexpected process state');\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default setContent;\r\n\r\n// const setContent=(status, Component, data)=>{\r\n//     switch(status){\r\n//         case 'idle':{\r\n//             return (!data\r\n//             ?<Skeleton/>\r\n//             :<Component data={data}/>)\r\n//         }\r\n//             break;\r\n//         case 'loading':\r\n//             return <Spinner/>\r\n//             break;\r\n//         case 'error':\r\n//             return <ErrorMessage/>\r\n//         default:\r\n//             throw new Error('Unexpected process state');\r\n//     }\r\n// }\r\n\r\n// switch(process){\r\n//     case 'waiting':\r\n//         return <Skeleton/>;\r\n//         break;\r\n//     case 'loading':\r\n//         return <Spinner/>\r\n//         break;\r\n//     case 'confirmed':\r\n//         return <Component data={data}/>\r\n//         break;\r\n//     case 'error':\r\n//         return <ErrorMessage/>\r\n//     default:\r\n//         throw new Error('Unexpected process state');\r\n// }","export default __webpack_public_path__ + \"static/media/ErrorMessage.42292aa1.gif\";","import img from './ErrorMessage.gif';\r\n\r\nconst ErrorMessage=()=>{\r\n    return(\r\n        <img src={img } alt='Error' style={{objectFit:'contain',display:'block', width:'250px',height:'250px', margin:'0 auto'}}/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Пожалуйста выбери героя слева для просмотра информации</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                Новые комиксы каждую неделю!<br/>\n                Следите за обновлениями!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;"],"sourceRoot":""}